{"version":3,"sources":["Components/LaunchItem.js","Components/MissionStatus.js","Components/Launches.js","Components/Launch.js","logo.PNG","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionStatus","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d29a524.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction LaunchItem({ launch: {flight_number, mission_name, launch_date_local, launch_success} }) {\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Mission:<span className ={classNames({\r\n                        'text-success':launch_success,\r\n                        'text-danger': !launch_success\r\n                    })}>{mission_name}</span></h4>\r\n                    <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment></p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LaunchItem\r\n","import React from 'react'\r\n\r\nfunction MissionStatus() {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-success\"/> = Success\r\n            </p>\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-danger\"/> = Fail\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MissionStatus\r\n","import React, { Component, Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport LaunchItem from './LaunchItem';\r\nimport MissionStatus from './MissionStatus';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n    query LaunchesQuery{\r\n        launches{\r\n            flight_number,\r\n            mission_name,\r\n            launch_date_local,\r\n            launch_success\r\n        }\r\n    }\r\n`;\r\n\r\nexport class Launches extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"display-4 my-3\">Launches</h1>\r\n\r\n                <MissionStatus />\r\n\r\n                <Query query={LAUNCHES_QUERY}>\r\n                    {\r\n                        ({loading, error, data})=>{\r\n                            if(loading) return <h4>Loading...</h4>\r\n                            if(error) console.log(error);\r\n                            return<Fragment>\r\n                                {\r\n                                    data.launches.map(launch => (\r\n                                        <LaunchItem key={launch.flight_number} launch={launch}/>\r\n                                    ))\r\n                                }\r\n                            </Fragment>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launches\r\n","import React, { Component, Fragment } from 'react'\r\nimport gql from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\nimport {Link} from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst LAUNCH_QUERY = gql`\r\n    query LaunchQuery($flight_number: Int!){\r\n        launch(flight_number: $flight_number){\r\n            flight_number,\r\n            mission_name,\r\n            launch_year,\r\n            launch_success,\r\n            launch_date_local,\r\n            rocket {\r\n                rocket_id,\r\n                rocket_name,\r\n                rocket_type\r\n            }\r\n        }\r\n    }\r\n`;\r\nclass Launch extends Component {\r\n    render() {\r\n        let {flight_number} = this.props.match.params\r\n        flight_number = parseInt(flight_number);\r\n\r\n        return (\r\n            <Fragment>\r\n                <Query query={LAUNCH_QUERY} variables={{flight_number}}>\r\n                    {\r\n                        ({loading, error, data})=>{\r\n                            if(loading) return <h1>Loading...</h1>\r\n                            if(error) console.log(error);\r\n                            \r\n\r\n                            const {mission_name, flight_number, launch_year, launch_success, rocket: { rocket_id, rocket_name, rocket_type}} = data.launch;\r\n\r\n                            return <div>\r\n                                <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission:</span>{mission_name}</h1>\r\n                                <h4 className=\"mb-3\">Launch Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Flight Number: {flight_number}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Launch Year: {launch_year}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Launch Successfull: \r\n                                        <span className={classNames({\r\n                                            'text-success': launch_success,\r\n                                            'text-danger': !launch_success\r\n                                            })}\r\n                                        >\r\n                                            {launch_success ? 'Yes': 'No'}\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n                                <h4 className=\"my-3\">Rocket Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Rocket ID: {rocket_id}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Rocket Name: {rocket_name}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Rocket Type: {rocket_type}\r\n                                    </li>\r\n                                </ul>\r\n                                <hr/>\r\n                                <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\r\n                            </div>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launch\r\n","export default __webpack_public_path__ + \"static/media/logo.cebe5552.PNG\";","import React  from 'react';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Launches from './Components/Launches';\nimport Launch from './Components/Launch';\nimport './App.css';\nimport logo from './logo.PNG'\n\n\nconst client = new ApolloClient({\n   //uri:'http://localhost:5000/graphql'\n  uri: '/graphql'\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img \n            src={logo} \n            alt=\"SpaceX\" \n            style={{width:300, display: 'block', margin:'auto'}} />\n            <Route exact path=\"/\" component={ Launches } />\n            <Route exact path=\"/launch/:flight_number\" component={ Launch } />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}